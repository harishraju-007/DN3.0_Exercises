### Exercise 2: Implementing Dependency Injection

#### Scenario:
In the library management application, you need to manage the dependencies between the `BookService` and `BookRepository` classes using Spring's IoC and DI.

#### Steps:

1. **Modify the XML Configuration:**
    - Update `applicationContext.xml` to wire `BookRepository` into `BookService`.
    
    ```xml
    <bean id="bookService" class="com.library.service.BookService">
        <property name="bookRepository" ref="bookRepository"/>
    </bean>
    ```

2. **Update the BookService Class:**
    - Ensure that `BookService` class has a setter method for `BookRepository`.
    
    ```java
    package com.library.service;

    import com.library.repository.BookRepository;

    public class BookService {
        private BookRepository bookRepository;

        public void setBookRepository(BookRepository bookRepository) {
            this.bookRepository = bookRepository;
        }

        // Service methods
    }
    ```

3. **Test the Configuration:**
    - Run the `LibraryManagementApplication` main class to verify the dependency injection.
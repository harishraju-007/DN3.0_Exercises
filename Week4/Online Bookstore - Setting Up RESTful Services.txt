Exercise 1: Online Bookstore - Setting Up RESTful Services:-

1.Create a class called BookStoreAPI:

package com.example.BookStoreAPI;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class BookStoreApiApplication {

	public static void main(String[] args) {
		SpringApplication.run(BookStoreApiApplication.class, args);
	}

}

2.Run the Application:

package com.example.BookStoreAPI;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class BookStoreApiApplicationTests {

	@Test
	void contextLoads() {
	}

}

3.Explore Spring Boot 3 Features:

* Java 17 Requirement: 
                Spring Boot 3 requires Java 17, enabling the use of modern Java features like records, pattern matching, and more.
* GraalVM Native Image Support: 
                Enhanced support for creating native images using GraalVM, which results in faster startup times and reduced memory usage.
* Observability: 
                Enhanced observability with new features for tracing, metrics, and logging, making it easier to monitor your applications.
* Improved HTTP Interface: 
                Support for declarative HTTP clients using interfaces, simplifying HTTP communication.
* Updated Dependency Management: 
                Integration with the latest versions of major frameworks such as Spring Framework 6, Hibernate 6, and Jakarta EE 9.
* Simplified Configuration: 
                Improvements in configuration properties and profiles, making application setup and deployment easier.
